<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="x" default="-1"/>
  <arg name="y" default="1"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="1.5708"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <param name="robot_description" command="$(find xacro)/xacro '$(find diploma_self_balancing_robot)/urdf/diploma_self_balancing_robot.xacro'"/>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False"/>
  </node>
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
  <node pkg="tf" type="static_transform_publisher" name="static_odom_broadcaster"
  args="0 0 0 0 0 0 map odom 100"/>
    
  <node name="diploma_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
   args="-urdf -param robot_description -model diploma -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" />
   
  <include file="$(find depthimage_to_laserscan)/launch/launchfile_sample.launch"/>
  
  <node name="rviz" pkg="rviz" type="rviz" args="2> >(grep -v TF_REPEATED_DATA buffer_core)"/> 
</launch>
